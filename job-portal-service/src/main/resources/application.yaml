spring:
  application:
    name: job-portal-service

  profiles:
    active: ${PROFILE}

server:
  port: 9090

management:
  endpoint:
    health:
      probes:
        enabled: true
  tracing:
    sampling:
      probability: 1.0


logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

--- # TEST ENVIRONMENT PROPERTIES

spring:
  config:
    activate:
      on-profile: test

  rabbitmq:
    host: ${TEST_RABBITMQ_HOST}
    port: 5672
    username: ${TEST_RABBITMQ_USERNAME}
    password: ${TEST_RABBITMQ_PASSWORD}


  datasource:
    url: ${TEST_DB_URL}
    username: ${TEST_DB_USERNAME}
    password: ${TEST_DB_PASSWORD}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  #    properties:
  #      hibernate:
  #        generate_statistics: true
  #        jdbc:
  #          batch_size: 25
  #          order_inserts: true

  cloud:
    azure:
      active-directory:
        b2c:
          app-id-uri: ${APP_ID_URI}
          enabled: true
          base-uri: ${BASE_URI}
          credential:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
          profile:
            tenant-id: ${TENANT_ID}
          user-flows:
            sign-up-or-sign-in: ${FLOW}

rabbitmq:
  exchange:
    name: jobs_exchange
  job:
    queue:
      name: jobs_queue
    routing:
      key: jobPortalDemoKey

  user:
    queue:
      name: user_queue
    routing:
      key: userQueueDemoKey

  jobApplication:
    queue:
      name: job_application_queue
    routing:
      key: jobApplicationRoutingKey

tracing:
  url: ${TRACE_URL_TEST}

token:
  password: ${TOKEN_PASSWORD}
  scope: ${TOKEN_SCOPE}
  username: ${TOKEN_USERNAME}
  grantType: ${TOKEN_GRANTTYPE}
  client:
    id: ${CLIENT_ID}
    secret: ${CLIENT_SECRET}

server:
  tomcat:
    relaxed-query-chars:
      - "|"
      - "{"
      - "}"
      - "["
      - "]"


--- # PRODUCTION ENVIRONMENT PROPERTIES

spring:
  config:
    activate:
      on-profile: prod


  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: 5672
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update

  cloud:
    azure:
      active-directory:
        b2c:
          app-id-uri: ${APP_ID_URI}
          enabled: true
          base-uri: ${BASE_URI}
          credential:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
          profile:
            tenant-id: ${TENANT_ID}
          user-flows:
            sign-up-or-sign-in: ${FLOW}

rabbitmq:
  exchange:
    name: jobs_exchange
  job:
    queue:
      name: jobs_queue
    routing:
      key: jobPortalDemoKey

  user:
    queue:
      name: user_queue
    routing:
      key: userQueueDemoKey

  jobApplication:
    queue:
      name: job_application_queue
    routing:
      key: jobApplicationRoutingKey

tracing:
  url: ${TRACE_URL}

token:
  password: ${TOKEN_PASSWORD}
  scope: ${TOKEN_SCOPE}
  username: ${TOKEN_USERNAME}
  grantType: ${TOKEN_GRANTTYPE}
  client:
    id: ${CLIENT_ID}
    secret: ${CLIENT_SECRET}





